[{"path":"https://cmmr.github.io/jobqueue/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 fillpattern authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cmmr.github.io/jobqueue/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel P. Smith. Author, maintainer. Alkek Center Metagenomics Microbiome Research. Copyright holder, funder.","code":""},{"path":"https://cmmr.github.io/jobqueue/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Smith D (2024). jobqueue: Queue Run Asynchronous Interruptible R Tasks Background Processes. R package version 0.1.0.9000, https://cmmr.github.io/jobqueue/.","code":"@Manual{,   title = {jobqueue: Queue and Run Asynchronous Interruptible R Tasks on Background Processes},   author = {Daniel P. Smith},   year = {2024},   note = {R package version 0.1.0.9000},   url = {https://cmmr.github.io/jobqueue/}, }"},{"path":"https://cmmr.github.io/jobqueue/index.html","id":"jobqueue","dir":"","previous_headings":"","what":"Queue and Run Asynchronous Interruptible R Tasks on Background Processes","title":"Queue and Run Asynchronous Interruptible R Tasks on Background Processes","text":"goal jobqueue run interruptible R commands background processes.","code":""},{"path":"https://cmmr.github.io/jobqueue/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Queue and Run Asynchronous Interruptible R Tasks on Background Processes","text":"","code":"# Install the latest stable version from CRAN: install.packages(\"jobqueue\")  # Or the development version from GitHub: install.packages(\"pak\") pak::pak(\"cmmr/jobqueue\")"},{"path":"https://cmmr.github.io/jobqueue/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Queue and Run Asynchronous Interruptible R Tasks on Background Processes","text":"","code":"library(jobqueue)  q <- Queue$new()  job <- q$run({ paste('Hello', 'world!') }) job$result #> [1] \"Hello world!\""},{"path":"https://cmmr.github.io/jobqueue/index.html","id":"asynchronous-callbacks","dir":"","previous_headings":"","what":"Asynchronous Callbacks","title":"Queue and Run Asynchronous Interruptible R Tasks on Background Processes","text":"","code":"j <- q$run(   expr  = { Sys.sleep(1); 42 },    hooks = list(     'created' = ~{ message(\"We're uid '\", .$uid, \"'.\") },     '*'       = ~{ message('  - ', .$state) })) #> We're uid 'J2'. #>   - created #>   - submitted #>   - queued #>   - assigned #>   - dispatched #>   - running #>   - done  j$on('done', function (job) message('result = ', job$result)) #> result = 42"},{"path":"https://cmmr.github.io/jobqueue/index.html","id":"with-the-promises-package","dir":"","previous_headings":"Asynchronous Callbacks","what":"With the ‘promises’ Package","title":"Queue and Run Asynchronous Interruptible R Tasks on Background Processes","text":"","code":"job      <- q$run({ 3.14 }) callback <- function (result) message('resolved with: ', result)  job %...>% callback #> resolved with: 42  job %>% then(callback) #> resolved with: 42  as.promise(job)$then(callback) #> resolved with: 42"},{"path":"https://cmmr.github.io/jobqueue/index.html","id":"stopping-jobs","dir":"","previous_headings":"","what":"Stopping Jobs","title":"Queue and Run Asynchronous Interruptible R Tasks on Background Processes","text":"running job stopped, background process terminated. replacement background process automatically spun take place. Stopped jobs return condition object class ‘interrupt’ result.","code":""},{"path":"https://cmmr.github.io/jobqueue/index.html","id":"manually","dir":"","previous_headings":"Stopping Jobs","what":"Manually","title":"Queue and Run Asynchronous Interruptible R Tasks on Background Processes","text":"custom message can also given, e.g. job$stop('reason'), returned condition object.","code":"job <- q$run({ Sys.sleep(2); 'Zzzzz' }) job$stop() job$result #> <interrupt: job stopped by user>"},{"path":"https://cmmr.github.io/jobqueue/index.html","id":"max-runtime","dir":"","previous_headings":"Stopping Jobs","what":"Max Runtime","title":"Queue and Run Asynchronous Interruptible R Tasks on Background Processes","text":"Limits (seconds) can set : total ‘submitted’ ‘done’ time: tmax = 2 per-state basis: tmax = list(queued = 1, running = 2) : tmax = list(total = 3, queued = 2, running = 2)","code":"job <- q$run({ Sys.sleep(2); 'Zzzzz' }, tmax = 0.2) job$result #> <interrupt: total runtime exceeded 0.2 seconds>"},{"path":"https://cmmr.github.io/jobqueue/index.html","id":"stop-id","dir":"","previous_headings":"Stopping Jobs","what":"Stop ID","title":"Queue and Run Asynchronous Interruptible R Tasks on Background Processes","text":"New jobs replace existing jobs stop_id.","code":"job1 <- q$run({ Sys.sleep(1); 'A' }, stop_id = 123) job2 <- q$run({ 'B' },               stop_id = 123) job1$result #> <interrupt: duplicated stop_id> job2$result #> [1] \"B\""},{"path":"https://cmmr.github.io/jobqueue/index.html","id":"copy-id","dir":"","previous_headings":"Stopping Jobs","what":"Copy ID","title":"Queue and Run Asynchronous Interruptible R Tasks on Background Processes","text":"New jobs mirror output existing jobs copy_id.","code":"job1 <- q$run({ Sys.sleep(1); 'A' }, copy_id = 456) job2 <- q$run({ 'B' },               copy_id = 456) job1$result #> [1] \"A\" job2$result #> [1] \"A\""},{"path":[]},{"path":"https://cmmr.github.io/jobqueue/index.html","id":"automaticly-identified","dir":"","previous_headings":"Variables","what":"Automaticly identified","title":"Queue and Run Asynchronous Interruptible R Tasks on Background Processes","text":"","code":"x <- 3 y <- 4 job <- q$run({ x + y }) job$result #> [1] 7"},{"path":"https://cmmr.github.io/jobqueue/index.html","id":"explicitly-defined","dir":"","previous_headings":"Variables","what":"Explicitly defined","title":"Queue and Run Asynchronous Interruptible R Tasks on Background Processes","text":"","code":"job <- q$run({ x + y }, list(x = 10, y = 2)) job$result #> [1] 12"},{"path":"https://cmmr.github.io/jobqueue/index.html","id":"mix-of-both","dir":"","previous_headings":"Variables","what":"Mix of both","title":"Queue and Run Asynchronous Interruptible R Tasks on Background Processes","text":"","code":"x <- 3 y <- 4 job <- q$run({ x + y }, list(x = 10), scan = TRUE) job$result #> [1] 14"}]
